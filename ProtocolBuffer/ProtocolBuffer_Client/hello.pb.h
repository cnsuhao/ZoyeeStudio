// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

#ifndef PROTOBUF_hello_2eproto__INCLUDED
#define PROTOBUF_hello_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace helloPkg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_hello_2eproto();
void protobuf_AssignDesc_hello_2eproto();
void protobuf_ShutdownFile_hello_2eproto();

class helloMsg;

// ===================================================================

class helloMsg : public ::google::protobuf::Message {
 public:
  helloMsg();
  virtual ~helloMsg();

  helloMsg(const helloMsg& from);

  inline helloMsg& operator=(const helloMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const helloMsg& default_instance();

  void Swap(helloMsg* other);

  // implements Message ----------------------------------------------

  helloMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const helloMsg& from);
  void MergeFrom(const helloMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required string strMail = 2;
  inline bool has_strmail() const;
  inline void clear_strmail();
  static const int kStrMailFieldNumber = 2;
  inline const ::std::string& strmail() const;
  inline void set_strmail(const ::std::string& value);
  inline void set_strmail(const char* value);
  inline void set_strmail(const char* value, size_t size);
  inline ::std::string* mutable_strmail();
  inline ::std::string* release_strmail();
  inline void set_allocated_strmail(::std::string* strmail);

  // required int32 nId = 3;
  inline bool has_nid() const;
  inline void clear_nid();
  static const int kNIdFieldNumber = 3;
  inline ::google::protobuf::int32 nid() const;
  inline void set_nid(::google::protobuf::int32 value);

  // repeated .helloPkg.helloMsg msg = 4;
  inline int msg_size() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 4;
  inline const ::helloPkg::helloMsg& msg(int index) const;
  inline ::helloPkg::helloMsg* mutable_msg(int index);
  inline ::helloPkg::helloMsg* add_msg();
  inline const ::google::protobuf::RepeatedPtrField< ::helloPkg::helloMsg >&
      msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::helloPkg::helloMsg >*
      mutable_msg();

  // @@protoc_insertion_point(class_scope:helloPkg.helloMsg)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_strmail();
  inline void clear_has_strmail();
  inline void set_has_nid();
  inline void clear_has_nid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::std::string* strmail_;
  ::google::protobuf::RepeatedPtrField< ::helloPkg::helloMsg > msg_;
  ::google::protobuf::int32 nid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_hello_2eproto();
  friend void protobuf_AssignDesc_hello_2eproto();
  friend void protobuf_ShutdownFile_hello_2eproto();

  void InitAsDefaultInstance();
  static helloMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// helloMsg

// required string strName = 1;
inline bool helloMsg::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void helloMsg::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void helloMsg::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void helloMsg::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& helloMsg::strname() const {
  return *strname_;
}
inline void helloMsg::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void helloMsg::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void helloMsg::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* helloMsg::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* helloMsg::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void helloMsg::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strMail = 2;
inline bool helloMsg::has_strmail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void helloMsg::set_has_strmail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void helloMsg::clear_has_strmail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void helloMsg::clear_strmail() {
  if (strmail_ != &::google::protobuf::internal::kEmptyString) {
    strmail_->clear();
  }
  clear_has_strmail();
}
inline const ::std::string& helloMsg::strmail() const {
  return *strmail_;
}
inline void helloMsg::set_strmail(const ::std::string& value) {
  set_has_strmail();
  if (strmail_ == &::google::protobuf::internal::kEmptyString) {
    strmail_ = new ::std::string;
  }
  strmail_->assign(value);
}
inline void helloMsg::set_strmail(const char* value) {
  set_has_strmail();
  if (strmail_ == &::google::protobuf::internal::kEmptyString) {
    strmail_ = new ::std::string;
  }
  strmail_->assign(value);
}
inline void helloMsg::set_strmail(const char* value, size_t size) {
  set_has_strmail();
  if (strmail_ == &::google::protobuf::internal::kEmptyString) {
    strmail_ = new ::std::string;
  }
  strmail_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* helloMsg::mutable_strmail() {
  set_has_strmail();
  if (strmail_ == &::google::protobuf::internal::kEmptyString) {
    strmail_ = new ::std::string;
  }
  return strmail_;
}
inline ::std::string* helloMsg::release_strmail() {
  clear_has_strmail();
  if (strmail_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmail_;
    strmail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void helloMsg::set_allocated_strmail(::std::string* strmail) {
  if (strmail_ != &::google::protobuf::internal::kEmptyString) {
    delete strmail_;
  }
  if (strmail) {
    set_has_strmail();
    strmail_ = strmail;
  } else {
    clear_has_strmail();
    strmail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 nId = 3;
inline bool helloMsg::has_nid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void helloMsg::set_has_nid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void helloMsg::clear_has_nid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void helloMsg::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 helloMsg::nid() const {
  return nid_;
}
inline void helloMsg::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
}

// repeated .helloPkg.helloMsg msg = 4;
inline int helloMsg::msg_size() const {
  return msg_.size();
}
inline void helloMsg::clear_msg() {
  msg_.Clear();
}
inline const ::helloPkg::helloMsg& helloMsg::msg(int index) const {
  return msg_.Get(index);
}
inline ::helloPkg::helloMsg* helloMsg::mutable_msg(int index) {
  return msg_.Mutable(index);
}
inline ::helloPkg::helloMsg* helloMsg::add_msg() {
  return msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::helloPkg::helloMsg >&
helloMsg::msg() const {
  return msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::helloPkg::helloMsg >*
helloMsg::mutable_msg() {
  return &msg_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace helloPkg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hello_2eproto__INCLUDED
