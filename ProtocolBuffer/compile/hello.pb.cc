// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "hello.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace helloPkg {

namespace {

const ::google::protobuf::Descriptor* helloMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  helloMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_hello_2eproto() {
  protobuf_AddDesc_hello_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "hello.proto");
  GOOGLE_CHECK(file != NULL);
  helloMsg_descriptor_ = file->message_type(0);
  static const int helloMsg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloMsg, strname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloMsg, strmail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloMsg, nid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloMsg, msg_),
  };
  helloMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      helloMsg_descriptor_,
      helloMsg::default_instance_,
      helloMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(helloMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(helloMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_hello_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    helloMsg_descriptor_, &helloMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_hello_2eproto() {
  delete helloMsg::default_instance_;
  delete helloMsg_reflection_;
}

void protobuf_AddDesc_hello_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013hello.proto\022\010helloPkg\"Z\n\010helloMsg\022\017\n\007s"
    "trName\030\001 \002(\t\022\017\n\007strMail\030\002 \002(\t\022\013\n\003nId\030\003 \002"
    "(\005\022\037\n\003msg\030\004 \003(\0132\022.helloPkg.helloMsg", 115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hello.proto", &protobuf_RegisterTypes);
  helloMsg::default_instance_ = new helloMsg();
  helloMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_hello_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_hello_2eproto {
  StaticDescriptorInitializer_hello_2eproto() {
    protobuf_AddDesc_hello_2eproto();
  }
} static_descriptor_initializer_hello_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int helloMsg::kStrNameFieldNumber;
const int helloMsg::kStrMailFieldNumber;
const int helloMsg::kNIdFieldNumber;
const int helloMsg::kMsgFieldNumber;
#endif  // !_MSC_VER

helloMsg::helloMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void helloMsg::InitAsDefaultInstance() {
}

helloMsg::helloMsg(const helloMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void helloMsg::SharedCtor() {
  _cached_size_ = 0;
  strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  strmail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

helloMsg::~helloMsg() {
  SharedDtor();
}

void helloMsg::SharedDtor() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strmail_ != &::google::protobuf::internal::kEmptyString) {
    delete strmail_;
  }
  if (this != default_instance_) {
  }
}

void helloMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* helloMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return helloMsg_descriptor_;
}

const helloMsg& helloMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_hello_2eproto();
  return *default_instance_;
}

helloMsg* helloMsg::default_instance_ = NULL;

helloMsg* helloMsg::New() const {
  return new helloMsg;
}

void helloMsg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_strname()) {
      if (strname_ != &::google::protobuf::internal::kEmptyString) {
        strname_->clear();
      }
    }
    if (has_strmail()) {
      if (strmail_ != &::google::protobuf::internal::kEmptyString) {
        strmail_->clear();
      }
    }
    nid_ = 0;
  }
  msg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool helloMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string strName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strname().data(), this->strname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_strMail;
        break;
      }

      // required string strMail = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strMail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strmail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strmail().data(), this->strmail().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nId;
        break;
      }

      // required int32 nId = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nid_)));
          set_has_nid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_msg;
        break;
      }

      // repeated .helloPkg.helloMsg msg = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_msg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void helloMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string strName = 1;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->strname(), output);
  }

  // required string strMail = 2;
  if (has_strmail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmail().data(), this->strmail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->strmail(), output);
  }

  // required int32 nId = 3;
  if (has_nid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nid(), output);
  }

  // repeated .helloPkg.helloMsg msg = 4;
  for (int i = 0; i < this->msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->msg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* helloMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string strName = 1;
  if (has_strname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strname().data(), this->strname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strname(), target);
  }

  // required string strMail = 2;
  if (has_strmail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strmail().data(), this->strmail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strmail(), target);
  }

  // required int32 nId = 3;
  if (has_nid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nid(), target);
  }

  // repeated .helloPkg.helloMsg msg = 4;
  for (int i = 0; i < this->msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->msg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int helloMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string strName = 1;
    if (has_strname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strname());
    }

    // required string strMail = 2;
    if (has_strmail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strmail());
    }

    // required int32 nId = 3;
    if (has_nid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nid());
    }

  }
  // repeated .helloPkg.helloMsg msg = 4;
  total_size += 1 * this->msg_size();
  for (int i = 0; i < this->msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->msg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void helloMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const helloMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const helloMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void helloMsg::MergeFrom(const helloMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  msg_.MergeFrom(from.msg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strname()) {
      set_strname(from.strname());
    }
    if (from.has_strmail()) {
      set_strmail(from.strmail());
    }
    if (from.has_nid()) {
      set_nid(from.nid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void helloMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void helloMsg::CopyFrom(const helloMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool helloMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  for (int i = 0; i < msg_size(); i++) {
    if (!this->msg(i).IsInitialized()) return false;
  }
  return true;
}

void helloMsg::Swap(helloMsg* other) {
  if (other != this) {
    std::swap(strname_, other->strname_);
    std::swap(strmail_, other->strmail_);
    std::swap(nid_, other->nid_);
    msg_.Swap(&other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata helloMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = helloMsg_descriptor_;
  metadata.reflection = helloMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace helloPkg

// @@protoc_insertion_point(global_scope)
